 1. 数据库建立Index有什么用，对性能有什么影响？
   索引数据结构：索引通常采用树结构，常见的是B树（平衡树）或B+树（平衡树的一种变种）。
               这些树结构允许快速的数据查找，因为它们是平衡的，具有固定的深度，使得查询的时间复杂度为O(log n)。

数据库中的索引是一种数据结构，用于提高查询性能。它们可以被看作是数据库表中一列或多列的快速查找方式，类似于书籍中的目录。索引的主要作用如下：
       1.快速数据检索：索引允许数据库系统快速定位符合查询条件的数据行，而不需要扫描整个表。这可以极大地提高查询性能，尤其是对于大型数据集。
       2.加速排序：如果查询需要按照某一列排序结果，拥有索引的列可以加速排序操作。
       3.唯一性约束：数据库中的唯一性约束（UNIQUE约束）通常需要索引来确保列中的值不重复。
       4.连接操作：在连接操作中，索引可以帮助数据库系统快速找到连接所需的行，从而提高连接操作的性能。

然而，索引也会对数据库性能产生一些影响：
       1.写操作效率下降：当执行插入、更新或删除操作时，数据库不仅需要修改表中的数据，还需要维护索引。因此，写操作可能变得更慢，特别是在有多个索引的情况下。
       2.占用存储空间：索引需要占用存储空间，占用的空间取决于索引的大小和表的大小。在大型数据库中，索引可能占用相当大的磁盘空间。
       3.索引维护开销：随着数据的插入、更新和删除，索引可能会变得不再紧凑，需要定期重建或重新组织来维护性能。
       4.查询性能不当：不正确的索引设计或过多的索引可能导致查询性能下降。在查询中使用不必要的索引，或者使用不合适的索引，都可能导致性能问题。

因此，索引的创建和使用需要权衡，需要根据具体的应用需求和查询模式来设计和管理索引。优化索引通常是数据库管理员的重要任务之一，以确保良好的性能和可用性。






